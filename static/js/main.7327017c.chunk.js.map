{"version":3,"sources":["components/row.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["TableRow","props","src","thumbnail","alt","name","email","API","getUsers","axios","get","App","useState","getUser","setUser","getFilt","setFilt","useEffect","then","res","data","results","catch","err","console","log","className","type","onChange","event","toFilter","filter","xx","first","last","toLowerCase","includes","target","value","onClick","toSort","sort","a","b","map","user","picture","cell","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,MAZf,SAAkBC,GACd,OACI,+BACI,mCAAK,qBAAKC,IAAKD,EAAME,UAAWC,IAAI,oBAApC,OACA,6BAAKH,EAAMI,OAEX,6BAAKJ,EAAMK,Y,iBCARC,EANH,CACRC,SAAU,WACN,OAAOC,IAAMC,IAAI,kD,MC6EVC,MA1Ef,WACE,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAgBC,EAAhB,KAgCA,OA9BAC,qBAAU,WACRV,EAAIC,WAAWU,MAAK,SAAAC,GAClBL,EAAQK,EAAIC,KAAKC,SACjBL,EAAQG,EAAIC,KAAKC,YAGhBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAwBD,sBAAKG,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sDAEF,qBAAKA,UAAU,SAAf,SACE,uBACEC,KAAK,OACLC,SAzBW,SAAAC,GAEjB,IAAMC,EAAWjB,EAAQkB,QAAO,SAAAC,GAAE,OAAKA,EAAG3B,KAAK4B,MAAQ,IAAMD,EAAG3B,KAAK6B,MAAMC,cAAcC,SAASP,EAAMQ,OAAOC,MAAMH,kBAErHnB,EAAQc,QAwBN,kCACE,gCACE,+BACE,oBAAIJ,UAAU,MAAd,mBACA,oBAAIA,UAAU,MAAMa,QAzBb,WACf,IAAMC,EAAS3B,EAAQ4B,MAAK,SAACC,EAAEC,GAC7B,OAAKD,EAAErC,KAAK6B,KAAOS,EAAEtC,KAAK6B,MAAiB,EACtCQ,EAAErC,KAAK6B,KAAOS,EAAEtC,KAAK6B,KAAgB,EACnC,KAETV,QAAQC,IAAIe,GACZxB,EAAQwB,IAkBA,kBAEA,oBAAId,UAAU,MAAd,wBAIJ,gCACGX,EAAQ6B,KAAI,SAAAC,GACX,OACE,cAAC,EAAD,CAEE1C,UAAW0C,EAAKC,QAAQ3C,UACxBE,KAAI,UAAKwC,EAAKxC,KAAK4B,MAAf,YAAwBY,EAAKxC,KAAK6B,MAEtC5B,MAAOuC,EAAKvC,OAJPuC,EAAKE,kBCtDXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7327017c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TableRow(props) {\r\n    return (\r\n        <tr>\r\n            <td> <img src={props.thumbnail} alt=\"image thumbnail\"/> </td>\r\n            <td>{props.name}</td>\r\n            {/* <td>{props.cell}</td> */}\r\n            <td>{props.email}</td>\r\n            {/* <td>{props.age}</td> */}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableRow;","import axios from 'axios';\r\n\r\nconst API = {\r\n    getUsers: () => {\r\n        return axios.get(\"https://randomuser.me/api/?results=10&nat=us\")\r\n    }\r\n};\r\n\r\nexport default API;","import React from \"react\";\nimport { useState, useEffect } from 'react'\nimport TableRow from \"./components/row\";\nimport API from \"./utils/API\";\n\nimport './App.css';\n\nfunction App() {\n  const [getUser, setUser] = useState([]);\n  const [getFilt, setFilt] = useState([]);\n\n  useEffect(() => {\n    API.getUsers().then(res => {\n      setUser(res.data.results);\n      setFilt(res.data.results);\n      // console.log(res.data.results);\n      // console.log(getUser);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(\"hello world\")\n  // }, [getFilt]);\n\n  const nameFilter = event => {\n    // console.log(event.target.value.toLowerCase());\n    const toFilter = getUser.filter(xx => (xx.name.first + \" \" + xx.name.last).toLowerCase().includes(event.target.value.toLowerCase()));\n    // console.log(toFilter);\n    setFilt(toFilter);\n  };\n\n  const nameSort = () => {\n    const toSort = getUser.sort((a,b) => {\n      if ( a.name.last < b.name.last ) { return -1; }\n      if ( a.name.last > b.name.last ) { return 1; }\n      return 0;\n    });\n    console.log(toSort);\n    setFilt(toSort);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Employee Directory</h1>\n      </header>\n      <div className=\"Search\">\n        <input \n          type=\"text\"\n          onChange={nameFilter}\n        />\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <th className=\"tr1\">Image</th>\n            <th className=\"tr2\" onClick={nameSort}>Name</th>\n            {/* <th>Phone</th> */}\n            <th className=\"tr3\">Email</th>\n            {/* <th>Age</th> */}\n          </tr>\n        </thead>\n        <tbody>\n          {getFilt.map(user => {\n            return (\n              <TableRow\n                key={user.cell}\n                thumbnail={user.picture.thumbnail}\n                name={`${user.name.first} ${user.name.last}`}\n                // phone={user.cell}\n                email={user.email}\n                // age={user.age}\n              />\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}